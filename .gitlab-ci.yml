

stages:
  - initialize
  - validate
  - plan
  - apply


variables:
  TF_ROOT: ${CI_PROJECT_DIR}
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_PROJECT_NAME}
  TF_PLAN: plan.cache
  TF_REPORT: plan.json
  TF_DEPLOY_BRANCH: main

image:
  name: hashicorp/terraform:latest
  entrypoint:
    - /usr/bin/env
    - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

before_script:
  - apk --no-cache add jq
  - cd ${TF_ROOT}

cache:
  key: terraform
  paths:
    - ${TF_ROOT}/.terraform

init:
  stage: initialize
  script:
    - terraform init -force-copy
  
validate:
  stage: validate
  script:
    - terraform init
    - terraform validate

plan:
  stage: plan
  script: 
    - terraform plan --out ${TF_PLAN}
    - terraform show --json ${PLAN} | jq -r '([.resource_changes[]?.change.actions?]|flatten)|{"create":(map(select(.=="create"))|length),"update":(map(select(.=="update"))|length),"delete":(map(select(.=="delete"))|length)}' > ${TF_REPORT}

  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/${TF_PLAN}
    reports:
      terraform: ${TF_ROOT}/${TF_REPORT}

apply:
  stage: apply
  script:
    - terraform apply --auto-approve ${TF_PLAN}

  dependencies:
    - plan

  when: manual
  allow_failure: false

  only:
    refs:
      - ${TF_DEPLOY_BRANCH}
